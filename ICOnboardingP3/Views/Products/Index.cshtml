@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Products</h2>
<div>
    @Html.Partial("_AddProductModal")
</div>

<div>
    <table id="products" data-bind="productViewModel" class="table table-light table-hover">
        <thead>
            <tr>
                <th style="display: none">Id</th>
                <th>Name</th>
                <th>Price</th>
                <th>Action(Edit)</th>
                <th>Action(Delete)</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: products">
            <tr>
                <td style="display:none" data-bind="text: id "></td>
                <td data-bind="text: name"></td>
                <td data-bind="text: price"></td>
                <td><button id="editProduct" data-bind="click:$parent.editProductBtn" class="btn btn-warning" type="button" data-toggle="modal" data-target="#editProductModal"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</button></td>
                <td><button id="deleteProduct" data-bind="click: $parent.selectProduct" class="btn btn-danger" type="button" data-toggle="modal" data-target="#deleteProductModal"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button></td>
            </tr>
        </tbody>
    </table>
</div>

<div>
    @Html.Partial("_DeleteProductModal")
</div>
<div>
    @Html.Partial("_EditProductModal")
</div>

@section scripts
{
    <script>

        $(document).ready(function () {

            ko.validation.rules.pattern.message = 'Invalid.';

            ko.validation.init({
                registerExtenders: true,
                messagesOnModified: true,
                insertMessages: true,
                parseInputAttributes: true,
                messageTemplate: null
            }, true);

            function productViewModel(id, name, price) {
                var self = this;

                self.id = ko.observable(id);
                self.name = ko.observable(name).extend({ required: { message: 'Please Enter Product Name!' } });
                self.price = ko.observable(price).extend({ required: { message: 'Please Enter Product Price' } });
                self.errors = ko.validation.group(self, { deep: true });

                var product = {
                    id: self.id,
                    name: self.name,
                    price: self.price
                };

                self.product = ko.observable();
                self.products = ko.observableArray();

                $.getJSON("/api/products", function (data) {
                    self.products(data);
                });

                self.addProduct = function () {
                    if (self.errors().length === 0) {
                        var newProduct = ko.toJSON(this);
                        $.ajax({
                            url: "/api/products",
                            method: "POST",
                            data: newProduct,
                            contentType: "application/json",
                            success: function (data) {
                                $("#newProductModal").modal("hide");
                                location.reload(true);
                            }
                        });
                    } else {
                        self.errors.showAllMessages();
                        $("#addModalMessage").removeAttr("style");
                    }
                };

                self.selectedProduct = ko.observable();

                self.selectProduct = function (product) {
                    self.selectedProduct(product);
                }

                self.deleteProduct = function () {
                    var id = self.selectedProduct().id;
                    $.ajax({
                        url: "/api/products/" + id,
                        method: "DELETE",
                        contentType: 'application/json',
                        success: function () {
                            $("#deleteProductModal").modal("hide");
                            location.reload(true);
                        },
                        error: function (xhr) {
                            alert(xhr.responseText);
                        }
                    });
                };

                self.editProductBtn = function (product) {
                    self.product(product);
                }

                self.editProduct = function () {
                    var editedProduct = self.product();
                    $.ajax({
                        url: "/api/products/" + editedProduct.id,
                        method: "PUT",
                        data: ko.toJSON(editedProduct),
                        contentType: "application/json",
                        processData: true,
                        success: function () {
                            $("#editProductModal").modal("hide");
                            location.reload(true);
                        },
                        error: function (xhr) {
                            alert(xhr.responseText);
                        }
                    });
                };

            }

            var productViewModel = new productViewModel();
            ko.applyBindings(productViewModel);
        });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}






