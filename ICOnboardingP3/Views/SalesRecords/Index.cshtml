@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Sales Records</h2>
<div>
    @Html.Partial("_AddProductSoldModal")
</div>

<div>
    <table id="productSolds" data-bind="productSoldViewModel" class="table table-light table-hover">
        <thead>
            <tr>
                <th style="display: none">Id</th>
                <th>Customer Name</th>
                <th>Product Name</th>
                <th>Store Name</th>
                <th>Date Sold</th>
                <th>Action(Edit)</th>
                <th>Action(Delete)</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: productSolds">
            <tr>
                <td style="display:none" data-bind="text: id "></td>
                <td data-bind="text: customer.name"></td>
                <td data-bind="text: product.name"></td>
                <td data-bind="text: store.name"></td>
                <td data-bind="text: moment(dateSold).format('DD/MM/YYYY')"></td>
                <td><button id="editProductSold" data-bind="click:$parent.editProductSoldBtn" class="btn btn-warning" type="button" data-toggle="modal" data-target="#editProductSoldModal"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</button></td>
                <td><button id="deleteProductSold" data-bind="click: $parent.selectProductSold" class="btn btn-danger" type="button" data-toggle="modal" data-target="#deleteProductSoldModal"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button></td>
            </tr>
        </tbody>
    </table>
</div>

<div>
    @Html.Partial("_DeleteProductSoldModal")
</div>
<div>
    @Html.Partial("_EditProductSoldModal")
</div>

@section scripts
{
    <script>

        $(document).ready(function () {

            ko.validation.rules.pattern.message = 'Invalid.';

            ko.validation.init({
                registerExtenders: true,
                messagesOnModified: true,
                insertMessages: true,
                parseInputAttributes: true,
                messageTemplate: null
            }, true);

            function productSoldViewModel() {
                var self = this;

                self.id = ko.observable();
                self.customerId = ko.observable().extend({ required: { message: 'Please Select Customer!' } });
                self.productId = ko.observable().extend({ required: { message: 'Please Select Product!' } });
                self.storeId = ko.observable().extend({ required: { message: 'Please Select Store!' } });
                self.dateSold = ko.observable(new Date()).extend({ required: { message: 'Please Enter Sold Date!' } });
                self.customer = ko.observable();
                self.product = ko.observable();
                self.store = ko.observable();
                self.errors = ko.validation.group(self, { deep: true });

                var productSold = {
                    id: self.id,
                    customerId: self.customerId,
                    productId: self.productId,
                    storeId: self.storeId,
                    dateSold: self.dateSold,
                    customer: self.customer,
                    product: self.product,
                    store: self.store
                };

                self.productSold = ko.observable();
                self.productSolds = ko.observableArray();

                $.getJSON("/api/salesrecords", function (data) {
                    self.productSolds(data);
                });

                self.customerList = ko.observableArray();
                self.storeList = ko.observableArray();
                self.productList = ko.observableArray();

                $.getJSON("/api/customers", function (data) {
                    self.customerList(data);
                });

                $.getJSON("/api/products", function (data) {
                    self.productList(data);
                });

                $.getJSON("/api/stores", function (data) {
                    self.storeList(data);
                });

                //Add new sales record
                self.addProductSold = function () {
                    
                    if (self.errors().length === 0) {
                        $.ajax({
                            url: "/api/salesrecords",
                            method: "POST",
                            data: ko.toJSON(productSold),
                            contentType: "application/json",
                            success: function (data) {
                                $("#AddProductSoldModal").modal("hide");
                                location.reload(true);
                            },
                            error: function (xhr) {
                                alert(xhr.responseText);
                            }
                        });
                    } else {
                        self.errors.showAllMessages();
                        $("#addModalMessage").removeAttr("style");
                    }
                };

                self.selectedProductSold = ko.observable();

                self.selectProductSold = function (productSold) {
                    self.selectedProductSold(productSold);
                }

                //Delete selected sales record
                self.deleteProductSold = function () {
                    var id = self.selectedProductSold().id;
                    $.ajax({
                        url: "/api/salesrecords/" + id,
                        method: "DELETE",
                        contentType: 'application/json',
                        success: function () {
                            $("#deleteProductSoldModal").modal("hide");
                            location.reload(true);
                        },
                        error: function (xhr) {
                            alert(xhr.responseText);
                        }
                    });
                };

                //Push all data into selection lists where the list top is the edited data
                self.editProductSoldBtn = function (productSold) {

                    self.productSold(productSold);
                    self.customerList.removeAll();
                    self.productList.removeAll();
                    self.storeList.removeAll();

                    self.customerList.push(self.productSold().customer);
                    $.getJSON("/api/customers", function (data) {
                        $.each(data, function (key, customer) {
                            if (customer.id !== self.productSold().customerId) {
                                self.customerList.push(customer);
                            }
                        });
                    });

                    self.productList.push(self.productSold().product);
                    $.getJSON("/api/products", function (data) {
                        $.each(data, function (key, product) {
                            if (product.id !== self.productSold().productId) {
                                self.productList.push(product);
                            }
                        });
                    });

                    self.storeList.push(self.productSold().store);
                    $.getJSON("/api/stores", function (data) {
                        $.each(data, function (key, store) {
                            if (store.id !== self.productSold().storeId) {
                                self.storeList.push(store);
                            }
                        });
                    });
                }

                //Edit selected sales record
                self.editProductSold = function () {
                    $.ajax({
                        url: "/api/salesrecords/" + self.productSold().id,
                        method: "PUT",
                        data: ko.toJSON(self.productSold()),
                        contentType: "application/json",
                        processData: true,
                        success: function () {
                            $("#editProductSoldModal").modal("hide");
                            location.reload(true);
                        },
                        error: function (xhr) {
                            alert(xhr.responseText);
                        }
                    });
                };
            }

            var productSoldViewModel = new productSoldViewModel();
            ko.applyBindings(productSoldViewModel);
        });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}

