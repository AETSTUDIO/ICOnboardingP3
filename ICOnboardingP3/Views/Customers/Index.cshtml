@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>
<div>
    @Html.Partial("_AddCustomerModal")
</div>

<div>
    <table id="customers" data-bind="customerViewModel" class="table table-light table-hover">
        <thead>
            <tr>
                <th style="display: none">Id</th>
                <th>Name</th>
                <th>Address</th>
                <th>Action(Edit)</th>
                <th>Action(Delete)</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: customers">
            <tr>
                <td style="display:none" data-bind="text: id "></td>
                <td data-bind="text: name"></td>
                <td data-bind="text: address"></td>
                <td><button id="editCustomer" data-bind="click:$parent.editCustomerBtn" class="btn btn-warning" type="button" data-toggle="modal" data-target="#editCustomerModal"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</button></td>
                <td><button id="deleteCustomer" data-bind="click: $parent.selectCustomer" class="btn btn-danger" type="button" data-toggle="modal" data-target="#deleteCustomerModal"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button></td>
            </tr>
        </tbody>
    </table>
</div>

<div>
    @Html.Partial("_DeleteCustomerModal")
</div>
<div>
    @Html.Partial("_EditCustomerModal")
</div>

@section scripts
{
    <script>

        $(document).ready(function () {

            ko.validation.rules.pattern.message = 'Invalid.';

            ko.validation.init({
                registerExtenders: true,
                messagesOnModified: true,
                insertMessages: true,
                parseInputAttributes: true,
                messageTemplate: null
            }, true);


            function customerViewModel() {
                var self = this;

                self.id = ko.observable();
                self.name = ko.observable().extend({ required: { message: 'Please Enter Customer Name!' } });
                self.address = ko.observable().extend({ required: { message: 'Please Enter Customer Address!' } });
                self.errors = ko.validation.group(self, { deep: true });


                var customer = {
                    id: self.id,
                    name: self.name,
                    address: self.address
                };

                self.customer = ko.observable();
                self.customers = ko.observableArray();

                $.getJSON("/api/customers", function (data) {
                    self.customers(data);
                });

                self.addCustomer = function () {

                    if (self.errors().length === 0) {
                        var newCustomer = ko.toJSON(this);
                        $.ajax({
                            url: "/api/customers",
                            method: "POST",
                            data: newCustomer,
                            contentType: "application/json",
                            success: function () {
                                $("#newCustomerModal").modal("hide");
                                location.reload(true);
                            }
                        });
                    } else {
                        self.errors.showAllMessages();
                        $("#addModalMessage").removeAttr("style");
                    }
                };

                self.selectedCustomer = ko.observable();

                self.selectCustomer = function (customer) {
                    self.selectedCustomer(customer);
                }

                self.deleteCustomer = function (customer) {
                    var id = self.selectedCustomer().id;
                    $.ajax({
                        url: "/api/customers/" + id,
                        method: "DELETE",
                        contentType: 'application/json',
                        success: function () {
                            $("#deleteCustomerModal").modal("hide");
                            location.reload(true);
                        },
                        error: function (xhr) {
                            alert(xhr.responseText);
                        }
                    });
                };

                self.editCustomerBtn = function (customer) {
                    self.customer(customer);
                }

                self.editCustomer = function () {

                    var editedCustomer = self.customer();
                    $.ajax({
                        url: "/api/customers/" + editedCustomer.id,
                        method: "PUT",
                        data: ko.toJSON(editedCustomer),
                        contentType: "application/json",
                        processData: true,
                        success: function () {
                            $("#editCustomerModal").modal("hide");
                            location.reload(true);
                        }
                    });

                };
            }

            var customerViewModel = new customerViewModel();
            ko.applyBindings(customerViewModel);

        });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}





